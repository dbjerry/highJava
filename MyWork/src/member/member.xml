<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- doctype 은 sqlmap내의 태그에 대한 정의가 있다. --> 			
			
			
<!-- namespace속성 : 아래에서 작성한 SQL을 호출할 때 같이 사용된다. -->
<!-- sqlmap namespace가 가장 바깥에 구성 -->			
<sqlMap namespace="member">
<typeAlias alias="memVO" type="vo.MemberVO"/>
	<!-- 
		이 영역에 sql문에 맞는 태그를 사용하여 SQL문을 기술한다.
		
		사용할 수 있는 기본적인 태그들
		<select> ~~~ </select>
		<insert> ~~~ </insert>
		<update> ~~~ </update>
		<delete> ~~~ </delete>
	 -->
	 
	 <!-- 
	 	위 태그에서 사용되는 속성들
	 		1) id속성 : 해당 태그를 호출할 때 <sqlMap>태그의 namespace와
	 							  연결하여 사용하는 이름
	 		2) parameterClass속성 : sql문에 사용될 데이터가 들어있는 객체를
	 							  지정한다. 
	 							  (보통 VO클래스, 자바의 자료형이름 등이 사용된다.)
	 							  (typeAlias로 지정한 alias명을 사용할 수 있다.)							  
			3) resultClass속성 : select문을 실행한 결과를 담을 객체를 지정한다.
									(보통 VO클래스나 자바의 자료형이름을 사용한다.)							 
	 -->
	 
	<!-- insert연습 -->
	<insert id="insertMember" parameterClass="memVO">
	 	insert into member(mem_id,mem_pass,mem_name,mem_mail,mem_comtel,mem_hometel
	 							,mem_add1,mem_add2,mem_zip,mem_regno1,mem_regno2)
	 		values(#mem_id#, #mem_pass#, #mem_name#, #mem_mail#, #mem_comtel#,#mem_hometel#
	 				,#mem_add1#,#mem_add2#,#mem_zip#,#mem_regno1#,#mem_regno2#)
	</insert>
	
	<!-- update연습(parameterClass에 alias를 지정할 수 있다.) -->
	<update id="updateMember" parameterClass="memVO">
	 	update member set mem_pass = #mem_pass#
	 						,mem_name = #mem_name#
	 						,mem_mail = #mem_mail#
	 						,mem_comtel = #mem_comtel#
	 						,mem_hometel = #mem_hometel#
	 						,mem_add1 = #mem_add1#
	 						,mem_add2 = #mem_add2#
	 						,mem_zip = #mem_zip#
	 						,mem_regno1 = #mem_regno1#
	 						,mem_regno2 = #mem_regno2#
	 					where mem_id = #mem_id#
	 
	</update>
	
	<!-- delete연습 
		-paramClass에 설정되는 값이 단일값(1개의 데이터)이면
		sql문에 그 값을 나타내는 변수는 사용자가 임의로 이름을 지정할 수 있다.	-->
	<delete id="deleteMember" parameterClass="String">
		delete from member
			where mem_id = #mem_id#
	</delete>
	 
	 
	 <!-- select연습 -->
	 <select id="getAllMember" resultClass="memVO">
	 	select * from member
	 </select>
	 
	 <select id="getMember" parameterClass="String" resultClass="memVO">
	 	select * from member 
	 		where mem_id = #aaaa# <!-- 이렇게 넣어도됨 -->
	 </select>
	 
	 <select id="SearchMember" parameterClass="memVO" resultClass="memVO">
	 
	 	select * from member
	 	<!-- dynamic : 동적 쿼리를 위한 문법 -->
	 	<!-- prepend : where를 서술하기위한 문법 -->
	 	<!-- mem_id가 isnotempty인 경우 해당 쿼리가 실행됨 -->
	 	<dynamic prepend="where">
	 		<isNotEmpty prepend="and" property="mem_id">
	 			mem_id = #mem_id#
	 		</isNotEmpty>
	 		<isNotEmpty prepend="and" property="mem_name">
	 			mem_name = #mem_name#
	 		</isNotEmpty>
	 		<isNotEmpty prepend="and" property="mem_mail">
	 			mem_mail = #mem_mail#
	 		</isNotEmpty>
	 		<isNotEmpty prepend="and" property="mem_add1">
	 			mem_add1 like '%' || #mem_add1# || '%' 
	 		</isNotEmpty>
	 	</dynamic>
	 
	 </select>
	 
	 
	 
</sqlMap>
