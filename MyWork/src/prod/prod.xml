<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- doctype 은 sqlmap내의 태그에 대한 정의가 있다. --> 			
			
			
<!-- namespace속성 : 아래에서 작성한 SQL을 호출할 때 같이 사용된다. -->
<!-- sqlmap namespace가 가장 바깥에 구성 -->			
<sqlMap namespace="prod">
<typeAlias alias="prodVO" type="vo.ProdVO"/>
	<!-- 
		이 영역에 sql문에 맞는 태그를 사용하여 SQL문을 기술한다.
		
		사용할 수 있는 기본적인 태그들
		<select> ~~~ </select>
		<insert> ~~~ </insert>
		<update> ~~~ </update>
		<delete> ~~~ </delete>
	 -->
	 
	 <!-- 
	 	위 태그에서 사용되는 속성들
	 		1) id속성 : 해당 태그를 호출할 때 <sqlMap>태그의 namespace와
	 							  연결하여 사용하는 이름
	 		2) parameterClass속성 : sql문에 사용될 데이터가 들어있는 객체를
	 							  지정한다. 
	 							  (보통 VO클래스, 자바의 자료형이름 등이 사용된다.)
	 							  (typeAlias로 지정한 alias명을 사용할 수 있다.)							  
			3) resultClass속성 : select문을 실행한 결과를 담을 객체를 지정한다.
									(보통 VO클래스나 자바의 자료형이름을 사용한다.)							 
	 -->
	 
	<!-- insert연습 -->
	<insert id="insertProd" parameterClass="prodVO">
	 	insert into prod(prod_id, prod_name, prod_lgu, prod_buyer,prod_cost 
	 						,prod_price , prod_sale, PROD_OUTLINE,prod_properstock 
	 						,prod_totalstock,prod_img )
	 		values(#prod_id#, #prod_name#, #prod_lgu#, #prod_buyer#,#prod_cost#
	 				,#prod_price#,#prod_sale#,#prod_outline#,#prod_properstock#
	 				,#prod_totalstock#,#prod_img#)
	</insert>
	
	<!-- update연습(parameterClass에 alias를 지정할 수 있다.) -->
	<update id="updateProd" parameterClass="prodVO">
	 	update prod set prod_name   = #prod_name#,
	 					prod_lgu    = #prod_lgu#,
	 					prod_buyer  = #prod_buyer#,
	 					prod_cost   = #prod_cost#,
	 					prod_price  = #prod_price#,
	 					prod_sale   = #prod_sale#,
	 					prod_outline    = #prod_outline#,
	 					prod_properstock = #prod_properstock#,
	 					prod_totalstock  = #prod_totalstock#,
	 					prod_img         = #prod_img#
	 					where prod_id = #prod_id#
	 
	</update>
	
	<!-- delete연습 
		-paramClass에 설정되는 값이 단일값(1개의 데이터)이면
		sql문에 그 값을 나타내는 변수는 사용자가 임의로 이름을 지정할 수 있다.	-->
	<delete id="deleteProd" parameterClass="String">
		delete from prod
			where prod_id = #prod_id#
	</delete>
	 
	 
	 <!-- select연습 -->
	 <select id="getProdAll" resultClass="prodVO">
	 	
	 	select * from prod
	 	
	 </select>
	 
	 <select id="getProd" parameterClass="String" resultClass="prodVO">
	 
	 	select * from prod 
	 		where prod_id = #aaaa# <!-- 이렇게 넣어도됨 -->
	 </select>
	 
	 <select id="searchProd" parameterClass="prodVO" resultClass="prodVO">
	 
	 	select * from prod
	 	<!-- dynamic : 동적 쿼리를 위한 문법 -->
	 	<!-- prepend : where를 서술하기위한 문법 -->
	 	<!-- mem_id가 isnotempty인 경우 해당 쿼리가 실행됨 -->
	 	<dynamic prepend="where">
	 		<isNotEmpty prepend="and" property="prod_id">
	 			prod_id = #prod_id#
	 		</isNotEmpty>
	 		<isNotEmpty prepend="and" property="prod_name">
	 			prod_name = #prod_name#
	 		</isNotEmpty>
	 		<isNotEmpty prepend="and" property="prod_buyer">
	 			prod_buyer = #prod_buyer#
	 		</isNotEmpty>
	 		<isNotEmpty prepend="and" property="prod_outline">
	 			out_line like '%' || #prod_outline# || '%' 
	 		</isNotEmpty>
	 	</dynamic>
	 
	 </select>
	 
	 
	 
</sqlMap>
